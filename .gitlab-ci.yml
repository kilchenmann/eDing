variables:
  CI_GITVERSION_TRACE:
    value: 'true'
    description: "Gitversion config emited and verbosity set. Default to true in the Guided Exploration for learning purposes."
  PACKAGENAME: $CI_PROJECT_NAME

# The Docker image that will be used to build your app
image: node:16.17.0

stages:
  - .pre
  - build
  - package
  - test
  - release
  - deploy

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG'
      when: never
    - if: $CI_COMMIT_BRANCH
      when: always

include:
  - local: '/gitversion-ci-cd-plugin-extension.gitlab-ci.yml' 

determineversion:
  extends: .gitversion_function

# Functions that should be executed before the build script is run
pages:
  cache:
    paths:
    - toolbox/node_modules/
  stage: deploy
  script:
    - npm install -g @angular/cli@6.2.1
    - cd toolbox
    - npm install
    - npm run build-lib
    - npm run build-page
    - mkdir -p ../public
    - mv dist/toolbox/* ../public/
  artifacts:
    paths:
      # The folder that contains the files to be exposed at the Page URL
      - public
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

build-job:       
  image: 
    name: docker.io/evilbad/electron-build:0.0.4
  stage: build
  script:
    - cd toolbox
    - npm install
    - npm run build-lib
    - npm run build-page
    - ng build --configuration production 
    - npx electron-packager . --platform=win32 --ignore=node_modules --ignore=src
  artifacts:
    paths:
      - toolbox/dist/**
      - toolbox/toolbox-win32-x64
    expire_in: 2 days

generic_create_package:
  stage: package
  image: bash:latest
  script:
    - |
      echo $GitVersion_SemVer

      if [[ "${CI_SCRIPT_TRACE}" == "true" ]] || [[ -n "${CI_DEBUG_TRACE}" ]]; then
        echo "Debugging enabled"
        set -xv
      fi    
      echo "Printing the environment - notice that the version variables are available in this job now..."
      printenv
      apk add curl
      cd toolbox
      tar -czvf ../${PACKAGENAME}.${GitVersion_SemVer}.tar.gz ./toolbox-win32-x64
      cd ..

      if [[ $CI_COMMIT_REF_PROTECTED == "false" ]]; then
        echo "To prevent clutter, packages are not pushed or download tested unless the branch is protected - they are available in job artifacts for inspection."
      else
        echo "Pushing package to registry."  
        curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ${PACKAGENAME}.${GitVersion_SemVer}.tar.gz ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGENAME}/${GitVersion_SemVer}/${PACKAGENAME}.${GitVersion_SemVer}.tar.gz
      fi
  artifacts:
    paths:
      - '*.tar.gz'

do_gitlab_release:
  stage: release
  when: on_success
  image: registry.gitlab.com/gitlab-org/release-cli
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED != "false"'
  script:
    - > 
      release-cli create --name ${GitVersion_SemVer} --description $CI_COMMIT_REF_NAME-$CI_JOB_ID
      --tag-name ${GitVersion_SemVer} --ref $CI_COMMIT_SHA
      --assets-link "{ \"link_type\":\"package\", \"name\":\"Binaries\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGENAME}/${GitVersion_SemVer}/${PACKAGENAME}.${GitVersion_SemVer}.tar.gz\"}"
