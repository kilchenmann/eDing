name: CI
env:
  nv: 16.17.0


on:
  push:
  release:
    types: [published]


jobs:
  # code linter
  lint:
    name: Run lint
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run the lint scripts
        run: |
          yarn lint-ci

  # unit tests
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run tests
        run: yarn test-ci

  # build
  build:
    name: Build
    needs: [unit-tests, lint]
    if: github.ref != 'refs/heads/main'
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: yarn build

  # Automate releases with Conventional Commit Messages as Pull Requests are merged into "main" branch
  release-please:
    name: Prepare next release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Get release please action
        uses: GoogleCloudPlatform/release-please-action@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          release-type: node
          package-name: ech-0160-DIMAG-Ingest
          changelog-types: '[
              {"type": "feat", "section": "Enhancements", "hidden": false },
              {"type": "fix", "section": "Bug Fixes", "hidden": false },
              {"type": "chore", "section": "Maintenance", "hidden": false },
              {"type": "refactor", "section": "Maintenance", "hidden": false },
              {"type": "docs", "section": "Documentation", "hidden": false }
            ]'

  # publish only on release
  publish:
    name: Publish Electron App
    needs: [build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]


    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 50
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv}}
      - name: Install dependencies
        run: yarn install
      - name: Build and release Electron app
        uses: paneron/action-electron-builder@v1.8.1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GH_TOKEN }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
