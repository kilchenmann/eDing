name: Main CI/CD
env:
  nv: 16.17.0

on:
  push:
  release:
    types: [ published ]

jobs:
  # code linter
  lint:
    name: Run lint
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run the lint scripts
        run: |
          yarn lint-ci

  # unit tests
  # unit-tests:
  #   name: Run unit tests
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main'
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v3
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.nv }}
  #     - name: Install dependencies
  #       run: yarn install --immutable && yarn postinstall
  #     - name: Run unit tests
  #       run: yarn test-ci

  # e2e tests
  # e2e-tests:
  #   name: Run e2e tests (incl. build)
  #   runs-on: windows-latest
  #   if: github.ref != 'refs/heads/main'
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v3
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.nv }}
  #     - name: Install dependencies
  #       run: yarn install --immutable && yarn postinstall
  #     - name: Build the app
  #       run: yarn build
  #     - name: Run e2e tests
  #       uses: DevExpress/testcafe-action@latest
  #       with:
  #         args: "electron ./testcafe-tests/main.spec.ts"

  # Automate releases with Conventional Commit Messages as Pull Requests are merged into "main" branch
  release-please:
    name: Prepare next release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.ref != 'refs/heads/deploy'
    steps:
      - name: Run release please
        uses: GoogleCloudPlatform/release-please-action@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          release-type: node
          package-name: ech-0160-DIMAG-Ingest
          changelog-types: '[
              {"type": "feat", "section": "Enhancements", "hidden": false },
              {"type": "fix", "section": "Bug Fixes", "hidden": false },
              {"type": "chore", "section": "Maintenance", "hidden": false },
              {"type": "refactor", "section": "Maintenance", "hidden": false },
              {"type": "docs", "section": "Documentation", "hidden": false }
            ]'

  # prepare deployment only on release
  # prepare:
  #   name: Prepare Deployment
  #   # needs: [build]
  #   runs-on: ${{ matrix.os }}
  # publish only on release
  # publish:
  #   name: Publish Electron App
  #   needs: [ lint, unit-tests, build-and-test ]
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [windows-latest]

  #   # if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
  #   if: github.ref != 'refs/heads/deploy'
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 50
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.nv}}
  #     - name: Install dependencies
  #       run: yarn install && yarn postinstall
  #     - name: Prepare Deployment (build and copy files)
  #       run: yarn prepare-deployment
  #     - name: Push to deploy branch
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GH_TOKEN }}
  #         publish_dir: ./dist
  #         publish_branch: deploy
  #         exclude_assets: ''
  #         full_commit_message: ${{ github.event.head_commit.message }}


  # deploy and publish; runs on release only
  publish:
    name: Publish
    # needs: [
    #   lint,
    #   unit-tests,
    #   e2e-tests
    # ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        # include:
        #   - os: macos-latest
        #     artifact_name: ech-0160-dimag-ingest.app
        #     asset_name: ech-0160-dimag-ingest-macos
        #   - os: windows-latest
        #     artifact_name: ech-0160-dimag-ingest.exe
        #     asset_name: ech-0160-dimag-ingest-win64
        #   - os: ubuntu-latest
        #     artifact_name: ech-0160-dimag-ingest.deb
        #     asset_name: ech-0160-dimag-ingest-linux
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 50
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv}}
      - name: Install dependencies
        run: yarn install && yarn postinstall
      - name: Build the angular app
        run: yarn build
      - name: Publish the electron app
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: yarn ef:publish

