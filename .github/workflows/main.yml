name: Main CI/CD
env:
  nv: 16.17.0

on:
  push:
  release:
    types: [published]

jobs:
  # code linter
  lint:
    name: Run lint
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/deploy'
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run the lint scripts
        run: |
          yarn lint-ci

  # unit tests
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/deploy'
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv }}
      - name: Install dependencies
        run: yarn install --immutable && yarn postinstall
      - name: Run tests
        run: yarn test-ci

  # build
  # build:
  #   name: Build
  #   needs: [unit-tests, lint]
  #   if: github.ref != 'refs/heads/main'
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v3
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.nv }}
  #     - name: Install dependencies
  #       run: yarn install --immutable && yarn postinstall
  #     - name: Build
  #       run: yarn build

  # Automate releases with Conventional Commit Messages as Pull Requests are merged into "main" branch
  release-please:
    name: Prepare next release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.ref != 'refs/heads/deploy'
    steps:
      - name: Get release please action
        uses: GoogleCloudPlatform/release-please-action@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          release-type: node
          package-name: ech-0160-DIMAG-Ingest
          changelog-types: '[
              {"type": "feat", "section": "Enhancements", "hidden": false },
              {"type": "fix", "section": "Bug Fixes", "hidden": false },
              {"type": "chore", "section": "Maintenance", "hidden": false },
              {"type": "refactor", "section": "Maintenance", "hidden": false },
              {"type": "docs", "section": "Documentation", "hidden": false }
            ]'

  # prepare deployment only on release
  prepare:
    name: Prepare Deployment
    # needs: [build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    # if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    if: github.ref != 'refs/heads/deploy'
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 50
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nv}}
      - name: Install dependencies
        run: yarn install && yarn postinstall
      - name: Prepare Deployment (build and copy files)
        run: yarn prepare-deployment
      - name: Push to deploy branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./dist
          publish_branch: deploy
          exclude_assets: ''
          full_commit_message: ${{ github.event.head_commit.message }}

